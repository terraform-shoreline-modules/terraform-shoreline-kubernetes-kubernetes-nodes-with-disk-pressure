{
  "name": "kubernetes_nodes_with_disk_pressure",
  "description": "Kubernetes is a popular container orchestration system used to manage and deploy containerized applications. Kubernetes nodes are the individual servers in a Kubernetes cluster that run the containers. Disk pressure is a condition where a node is using too much disk space or is using disk space too fast according to the thresholds set in the Kubernetes configuration. This condition can be caused by applications legitimately needing more space or an application misbehaving and filling up the disk prematurely in an unanticipated manner. It is important to monitor disk pressure as it can lead to performance issues, instability, or even downtime. When a Kubernetes node experiences disk pressure, it can trigger an incident that needs to be addressed to ensure the stability of the cluster.",
  "params": [
    {
      "name": "NODE_NAME",
      "value": ""
    },
    {
      "name": "CONTAINER_NAME",
      "value": ""
    },
    {
      "name": "DISK_SPACE_LIMIT",
      "value": ""
    },
    {
      "name": "K8S_CLUSTER_NAME",
      "value": ""
    }
  ],
  "cells": [
    {
      "name": "cell_1",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Kubernetes Nodes with Disk Pressure\nKubernetes is a popular container orchestration system used to manage and deploy containerized applications. Kubernetes nodes are the individual servers in a Kubernetes cluster that run the containers. Disk pressure is a condition where a node is using too much disk space or is using disk space too fast according to the thresholds set in the Kubernetes configuration. This condition can be caused by applications legitimately needing more space or an application misbehaving and filling up the disk prematurely in an unanticipated manner. It is important to monitor disk pressure as it can lead to performance issues, instability, or even downtime. When a Kubernetes node experiences disk pressure, it can trigger an incident that needs to be addressed to ensure the stability of the cluster."
    },
    {
      "name": "cell_2",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Get a list of nodes in the Kubernetes cluster"
    },
    {
      "name": "cell_3",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl get nodes`"
    },
    {
      "name": "cell_4",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the disk usage on a specific node"
    },
    {
      "name": "cell_5",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl ssh ${NODE_NAME} df -h`"
    },
    {
      "name": "cell_6",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check if the Kubernetes nodes are running out of disk space"
    },
    {
      "name": "cell_7",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl get nodes --field-selector spec.unschedulable=true`"
    },
    {
      "name": "cell_8",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the Kubernetes event logs for any disk-related errors"
    },
    {
      "name": "cell_9",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl get events --field-selector involvedObject.kind=Node,reason=OutOfDisk`"
    },
    {
      "name": "cell_10",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check if any pods are using a lot of disk space"
    },
    {
      "name": "cell_11",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl get pods --all-namespaces -o json | jq '.items[].spec.containers[].resources.requests.storage' | grep -v null`"
    },
    {
      "name": "cell_12",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check which namespaces are using the most disk space"
    },
    {
      "name": "cell_13",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl get namespace --no-headers | xargs -I {} sh -c 'echo {}; kubectl get pods -n {} --no-headers | xargs -I {} sh -c \"kubectl logs {} -n {} | wc -c\"' | awk '{print $1\" \"($2/1024/1024)\" MB\"}' | sort -k2 -n -r | head`"
    },
    {
      "name": "cell_14",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Cordon and then drain the node."
    },
    {
      "name": "cell_15",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl cordon $NODE_NAME && kubectl drain $NODE_NAME--ignore-daemonsets --delete-local-data`"
    }
  ]
}